services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: nof2_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: nof2_user
      POSTGRES_PASSWORD: nof2_password
      POSTGRES_DB: nof2_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nof2_user -d nof2_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nof2_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Next.js Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nof2_web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://nof2_user:nof2_password@postgres:5432/nof2_db?schema=public
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env

volumes:
  postgres_data:
  redis_data:
